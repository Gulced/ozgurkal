import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';

class RiskSituationsScreen extends StatefulWidget {
  @override
  _RiskSituationsScreenState createState() => _RiskSituationsScreenState();
}

class _RiskSituationsScreenState extends State<RiskSituationsScreen> {
  final FirebaseAuth _auth = FirebaseAuth.instance;
  final List<TextEditingController> riskliDurumControllers = List.generate(3, (_) => TextEditingController());
  Map<String, bool> oneriSecimleri = {};

  final List<String> degisiklikOnerileri = [
    "Hafta sonunda 3 gÃ¼nlÃ¼ÄŸÃ¼ne ÅŸehir dÄ±ÅŸÄ±na Ã§Ä±kmak",
    "Ä°stirahat gÃ¼nlerinde izin almak",
    "Konsere gitmek",
    "Spor yapmak",
    "AkrabalarÄ± ziyaret etmek",
    "Yemek iÃ§in dÄ±ÅŸarÄ±ya Ã§Ä±kmak",
    "Eski bir dostu ziyaret etmek",
    "Sevgilinle/eÅŸinle Ã¶zel bir gÃ¼n planlamak",
    "KÃ¼Ã§Ã¼k deÄŸiÅŸiklikler yapmak (FarklÄ± bir yere gitmek, farklÄ± bir yoldan yÃ¼rÃ¼mek)",
    "Yeni hobiler, eÄŸlenceler bulmak"
  ];

  final List<String> aktiviteOnerileri = [
    "YÃ¼rÃ¼mek",
    "Ders/Kurs almak",
    "Sinemaya gitmek",
    "Okumak",
    "YazÄ± yazmak",
    "Meditasyon/yoga Ã¶ÄŸrenmek",
    "Bisiklete binmek",
    "TV izlemek",
    "MÃ¼zik dinlemek",
    "Resim/Ã§izim yapmak",
    "BalÄ±k tutmak",
    "Hayvanlarla oynamak",
    "Spor yapmak",
    "AlÄ±ÅŸveriÅŸ yapmak",
    "Ä°badet etmek",
    "Yemek yapmak",
    "MÃ¼zik aleti Ã§almak",
    "KonuÅŸmadÄ±ÄŸÄ±nÄ±z arkadaÅŸlarÄ±nÄ±zla konuÅŸmak",
    "GÃ¶rÃ¼ÅŸmediÄŸiniz akrabalarÄ±nÄ±zla gÃ¶rÃ¼ÅŸmek"
  ];

  /// ğŸ“Œ KullanÄ±cÄ±nÄ±n girdiÄŸi verileri Firestoreâ€™a kaydeder
  Future<void> _saveRiskliDurumlar() async {
    final user = _auth.currentUser;
    if (user != null) {
      await FirebaseFirestore.instance.collection('profiles').doc(user.uid).set({
        'enRiskliDurumlar': riskliDurumControllers.map((controller) => controller.text).toList(),
        'oneriSecimleri': oneriSecimleri,
      }, SetOptions(merge: true));
    }
    Navigator.pop(context);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        backgroundColor: Colors.orange,
        title: const Text("Riskli Durumlar Listesi", style: TextStyle(color: Colors.white)),
        centerTitle: true,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: ListView(
          children: [
            const Text(
              " RÄ°SKLÄ° DURUMLAR LÄ°STESÄ°",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 10),
            const Text(
              "Sizin iÃ§in en riskli Ã¼Ã§ durumu yazar mÄ±sÄ±nÄ±z?",
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 10),
            _buildRiskSecimFormu(),
            const SizedBox(height: 20),
            const Text(
              "YazdÄ±klarÄ±nÄ±zla baÅŸa Ã§Ä±kmak iÃ§in aktivite Ã¶nerilerinden size uygun olanlarÄ± iÅŸaretler misiniz?",
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 10),
            _buildOneriListesi(),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: _saveRiskliDurumlar,
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.orange,
                padding: const EdgeInsets.symmetric(vertical: 12.0, horizontal: 20),
                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8.0)),
              ),
              child: const Text("Kaydet ve Geri DÃ¶n", style: TextStyle(color: Colors.white, fontSize: 16)),
            ),
          ],
        ),
      ),
    );
  }

  /// ğŸ“Œ KullanÄ±cÄ±nÄ±n en riskli 3 durumunu yazmasÄ± iÃ§in giriÅŸ kutularÄ±
  Widget _buildRiskSecimFormu() {
    return Column(
      children: List.generate(3, (index) {
        return Padding(
          padding: const EdgeInsets.symmetric(vertical: 8.0),
          child: TextField(
            controller: riskliDurumControllers[index],
            decoration: InputDecoration(
              labelText: "Riskli durum ${index + 1}",
              border: OutlineInputBorder(),
            ),
          ),
        );
      }),
    );
  }

  /// ğŸ“Œ KullanÄ±cÄ±ya baÅŸa Ã§Ä±kma yÃ¶ntemleri sunar
  Widget _buildOneriListesi() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        ...degisiklikOnerileri.map((oneri) {
          return CheckboxListTile(
            title: Text(oneri),
            value: oneriSecimleri[oneri] ?? false,
            onChanged: (bool? newValue) {
              setState(() {
                oneriSecimleri[oneri] = newValue ?? false;
              });
            },
          );
        }),
        const SizedBox(height: 10),
        const Text(
          "Aktivite Ã–nerileri",
          style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
        ),
        ...aktiviteOnerileri.map((oneri) {
          return CheckboxListTile(
            title: Text(oneri),
            value: oneriSecimleri[oneri] ?? false,
            onChanged: (bool? newValue) {
              setState(() {
                oneriSecimleri[oneri] = newValue ?? false;
              });
            },
          );
        }),
      ],
    );
  }
}
